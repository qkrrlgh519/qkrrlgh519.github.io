---
layout: post
title:  "Git 버전 만들기 - add, commit, log"
date:   2020-08-30 16:00:00 +0900
categories: Git
---

# add, commit, log

## 1. 수정한 파일을 스테이징하기 - git add

- 작업 트리에서 파일을 만들거나 수정했다면 스테이지에 수정한 파일을 추가합니다.
- 이렇게 깃에게 버전 만들 준비를 하라고 알려주는 것을 '스테이징(staging)' 또는 '스테이지에 올린다'라고 표현합니다.

```bash
git add hello.txt
```

- git에서 스테이징할 때 사용하는 명령은 git add입니다.
- 쉽게 말해, "이 수정 사항을 버전으로 만들거니까 staging area에 올려!" 입니다.

## 2. 스테이지에 올라온 파일 커밋하기 - git commit

- 깃에서는 버전을 만드는 것을 간단히 '커밋(commit)한다'고도 말합니다.
- 커밋할 때는 그 버전에 어떤 변경 사항이 있었는지 확인하기 위해 메시지를 함께 기록해 두어야 합니다.

```bash
git commit -m "message1"
```

- -m 옵션을 붙이면 커밋과 함께 저장할 메시지를 적을 수 있습니다.

## 3. 커밋 기록 자세히 살펴보기 - git log

```bash
git log
```

- git log 명령을 입력하면 지금까지 만든 버전이 화면에 나타나고, 각 버전마다 설명도 함께 나타납니다.
- 커밋 해시(commit hash) : 영문과 숫자로 된 긴 문자열로 커밋을 구별하는 아이디
- Author : 버전을 누가 만들었는지
- Date : 버전이 언제 만들어졌는지

## 'warning: LF will be replaced by CRLF in hello.txt'

- 깃에서 자동으로 텍스트 문서의 CRLF 문자를 LF 문자로 변환해서 커밋할 것이라는 의미입니다.
- 윈도우의 줄바꿈 문자와 리눅스의 줄바꿈 문자가 달라서 생기는 현상입니다.
- 사용자가 따로 어떤 조치를 해야하는 것은 아니므로 뜻만 이해하고 넘어가도 됩니다.

## 출처

- Do it! 지옥에서 온 문서 관리자 깃 & 깃허브 입문_생활코딩 운영자 이고잉 , MicroSoftMVP 고경희 지음